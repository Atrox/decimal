// Code generated by "stringer -type Condition"; DO NOT EDIT.

package decimal

import "fmt"

const _Condition_name = "noTrapsClampedConversionSyntaxDivisionByZeroDivisionImpossibleDivisionUndefinedInexactInsufficientStorageInvalidContextInvalidOperationOverflowRoundedSubnormalUnderflow"

var _Condition_map = map[Condition]string{
	1:    _Condition_name[0:7],
	2:    _Condition_name[7:14],
	4:    _Condition_name[14:30],
	8:    _Condition_name[30:44],
	16:   _Condition_name[44:62],
	32:   _Condition_name[62:79],
	64:   _Condition_name[79:86],
	128:  _Condition_name[86:105],
	256:  _Condition_name[105:119],
	512:  _Condition_name[119:135],
	1024: _Condition_name[135:143],
	2048: _Condition_name[143:150],
	4096: _Condition_name[150:159],
	8192: _Condition_name[159:168],
}

func (i Condition) String() string {
	if str, ok := _Condition_map[i]; ok {
		return str
	}
	return fmt.Sprintf("Condition(%d)", i)
}
